GNU:
	编译工具：

	调试工具：

	软件工程工具：

	其他工具：

GCC:
	可编译C  C++等代码
	执行效率比较高
	一个交叉编译器


GCC编译过程：
	1.预处理
		把带“#”的代码展开、  例如头文件、宏定义、条件编译 
		gcc -E test.c -o test.i  生成 .i 文件  依然是C源程序
	2.编译
		把.i文件编程汇编文件.s     会检查语法错误少
		gcc -S test.i -o test.s 生成汇编文件
	3.汇编
		方法1：
			gcc -c test.s -o test.o 生成目标代码
		方法2：
			用汇编器从汇编代码生成目标代码
			as test.s -o test.o
	4.链接
		gcc test.o -o test -lm 链接库资源

调试器---Gdb调试流程
	1.首先使用gcc 对test.c 进行编译，要加上"-g"
		gcc -g test.c -o test
		gdb test进入调试
		
		调试中按 s 和 n 的区别：
			都是但单步运行，n遇到函数不会进入函数体中，只会把函数当场一行，而s会跳到函数体中进行单步运行。

		c  当程序中设置了多个断点，n可以从上个断点跳到下一个断点。

		要想在gdb调试中获取命令行参数argc  可以使用 set args  参数1  参数2