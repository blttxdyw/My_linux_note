标准IO：
	1.C标准（ANSIC）中定义的一组IO
	2.带缓冲机制
	3.通过流FILE表示操作的文件

文件IO:
	1.POSIX（可移植操作系统接口）  定义的一组IO
	2.无缓冲，	每次读写操作都引起系统调用
	3.核心概念是文件描述符
	4.访问各种类型文件
	5.Linux 下,标准IO基于文件IO实现


	文件描述符：
		1.每个打开的文件都对应一个文件描述符
		2.文件描述符是一个非负整数，linux程序中每个打开的文件都会分配一个文件描述符
		3.文件描述符从0开始分配，一次递增。
		4.系统会为每个程序分配文件描述符，互补影响
		5.文件IO操作通过文件描述符来完成。

		0,1,2的含义？
			标准IO是在文件IO的基础上封装了缓冲机制，0,1,2则对应stdin,stdout,stderr

	-----------------------------------------------------------------------
	#include <fcntl.h>
	
	int open(const char *path, int oflag, ...);
		1.成功返回文件描述符，出错返回EOF
		2.打开文件时（文件已经存在）使用前两个参数。
		3.创建文件时第三个参数指定文件的权限。

	
	#include <unistd.h>
	int close(int fd);
		1.用来关闭一个打开的文件
		2.成功返回0，出错返回EOF
		3.程序结束时自动关闭所有打开的文件
		4.文件关闭后，文件描述符不再代表一个文件
	
	
	