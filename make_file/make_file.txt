MAKE:

	工程管理器,管理多个文件

	只编译改动的代码文件,不用编译所有的文件。


makefile 基本结构
	- 由make工具创建的目标体(target),通常是目标文件或者可执行文件。
	- 要创建的目标体所依赖的文件(dependency_file)
	- 创建每个目标体时所执行的命令(command)
	- 命令前面必须是一个TAB.



makefile 格式:
	target1 : dependcy_file
	<TAB> command


例子:
	hello : hello.c hello.h
		gcc -c hello.c -o hello



注释:
	-Wall:表示允许发出gcc所有有用的报警信息
	-c :只是编译不链接 生成目标文件.o
	-o file:表示把输出文件输出到file里


执行 make 默认执行makefile文件中的第一个目标文件,等价于make test

可单独执行某个目标文件 例如:make target1...


伪目标:
	肯定会执行的目标
	.PHONY:clean    //不管有没有clean这个目标  都会无条件的执行



创建和使用变量
	目的:
		用来代替一个文本字符串
			1.系列文件的名字
			2.传递给编译器的参数
			3.需要运行的程序
			4.需要查找源代码的目录
			5.需要输出信息的目录
			6.。。。。。


	变量定义的两种方式
		- 递归展开方式  VAR=var
		- 简单方式 VAR: =var

	变量使用$(VAR)

	如果变量名用“$”则用“$$”来表示

	类似编程语言中的宏


	 
	创建和使用自动变量
		$@ 目标文件的完成名称,包括扩展名
		$* 不包括扩展名的目标文件名
		.....


	Make的使用
		-C dir 读入指定目录下的Makefile
		-f file 读入当前目录下的file文件作为Makefile
		-I  指定被包含的Makefile所在的目录
		-i  忽略所有的命令执行错误


	Makefile 的隐含规则



	VPATH:虚路径
	